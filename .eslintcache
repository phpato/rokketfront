[{"C:\\Users\\Usuario\\rokketfront\\src\\index.js":"1","C:\\Users\\Usuario\\rokketfront\\src\\App.js":"2","C:\\Users\\Usuario\\rokketfront\\src\\reportWebVitals.js":"3","C:\\Users\\Usuario\\rokketfront\\src\\component\\Main.js":"4","C:\\Users\\Usuario\\rokketfront\\src\\component\\Navbar.js":"5","C:\\Users\\Usuario\\rokketfront\\src\\component\\Book.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":212,"mtime":1609878125601,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":9739,"mtime":1609920607184,"results":"11","hashOfConfig":"8"},{"size":183,"mtime":1609877628605,"results":"12","hashOfConfig":"8"},{"size":462,"mtime":1609880856588,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"whsoeo",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Usuario\\rokketfront\\src\\index.js",[],["28","29"],"C:\\Users\\Usuario\\rokketfront\\src\\App.js",[],"C:\\Users\\Usuario\\rokketfront\\src\\reportWebVitals.js",[],"C:\\Users\\Usuario\\rokketfront\\src\\component\\Main.js",["30","31"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport Book from './Book';\r\nimport swal from 'sweetalert2';\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            book: {\r\n                _id: \"\",\r\n                title: \"\",\r\n                author: \"\",\r\n                description: \"\",\r\n            },\r\n            books: [],\r\n            errors: [],\r\n            showing: false,\r\n            adding: false,\r\n            loading: false\r\n        };\r\n        this.formAddBook = this.formAddBook.bind(this)\r\n    }\r\n\r\n    async getItems() {\r\n        this.setState({loading: true});\r\n        const servicesResponse = await axios.get('https://rokket-backend1.herokuapp.com/items');\r\n        const {data} = await servicesResponse;\r\n        this.setState({books: data.books, loading: false});\r\n    }\r\n\r\n    async formAddBook(event) {\r\n        event.preventDefault();\r\n        if(this.validateForm()){\r\n            const book = this.state.book;\r\n            try{\r\n                const savedBookResponse = await axios.post('https://rokket-backend1.herokuapp.com/items', book);\r\n                this.cleanForm();\r\n                this.getItems();\r\n                swal.fire({\r\n                    title: \"Exito\",\r\n                    text: \"Libro guardado!\",\r\n                    icon: \"success\"\r\n                });\r\n            }catch(error){\r\n                swal.fire({\r\n                    title: \"Error\",\r\n                    text: \"Libro con el titulo ya existe!!\",\r\n                    icon: \"error\"\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    async deleteBook(book) {\r\n        try{\r\n            const deletedBookResponse = await axios.delete( `https://rokket-backend1.herokuapp.com/items/${book._id}`);\r\n            swal.fire({\r\n                title: \"Exito\",\r\n                text: \"Libro eliminado!\",\r\n                icon: \"success\"\r\n            });\r\n            this.cleanForm();\r\n            this.getItems();\r\n        }catch(error){\r\n            swal.fire({\r\n                title: \"Error\",\r\n                text: \"Error al eliminar el libro\",\r\n                icon: \"error\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getItems();\r\n    }\r\n\r\n    checkBook = (book) => {\r\n        this.setState({showing: !this.state.showing, book});\r\n    }\r\n\r\n    addBook = () => {\r\n        this.setState({book: {}, adding: !this.state.adding})\r\n    }\r\n\r\n    cleanForm = () => {\r\n        this.setState({book: {}, adding: false, showing: false});\r\n    }\r\n\r\n    validateForm = () => {\r\n        let errors = []\r\n        if(!this.state.book.title){\r\n            errors.push(\"Debe ingresar un titulo\");\r\n        }\r\n        if(!this.state.book.author){\r\n            errors.push(\"Debe ingresar un autor\");\r\n        }\r\n        if(!this.state.book.description){\r\n            errors.push(\"Debe ingresar una descripcion\");\r\n        }\r\n        this.setState({errors})\r\n        if(errors.length){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    setTitle = (value) => {\r\n        this.setState({ book: {...this.state.book, title: value } })\r\n    }\r\n\r\n    setAuthor = (value) => {\r\n        this.setState({ book: {...this.state.book, author: value } })\r\n    }\r\n\r\n    setDescription = (value) => {\r\n        this.setState({ book: {...this.state.book, description: value } })\r\n    }\r\n    \r\n    render() {\r\n        const books = this.state.books;\r\n        const errors = this.state.errors;\r\n        return (\r\n            <div className=\"container\">\r\n                <br />\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {this.state.errors.length \r\n                            ? \r\n                                <div className=\"card-body bg-danger text-white\">\r\n                                    <ul>\r\n                                        {errors.map(error =>{\r\n                                        return <li key={error}>{error}</li>;\r\n                                    })}\r\n                                    </ul>\r\n                                </div>\r\n                            :\r\n                            \"\"\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <br/>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header text-white bg-primary\">\r\n                                Libros\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <button className={this.state.adding ? \"btn btn-danger\" : \"btn btn-success\"} onClick={this.addBook}>\r\n                                    {this.state.adding ? \"Cancelar\" : \"Crear\"}\r\n                                </button>\r\n                                <br />\r\n                                \r\n                               \r\n                                    {this.state.adding \r\n                                    ? \r\n                                    <div>\r\n                                        <br />\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"text-white\">Autor:</label>\r\n                                            <input className=\"form-control\" type=\"text\" onChange={e => this.setAuthor(e.target.value)} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"text-white\">Titulo:</label>\r\n                                            <input className=\"form-control\" type=\"text\" onChange={e => this.setTitle(e.target.value)} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"text-white\">Descripcion:</label>\r\n                                            <textarea className=\"form-control\" type=\"text\" onChange={e => this.setDescription(e.target.value)} />\r\n                                        </div>\r\n                                        <div className=\"form-group text-center\">\r\n                                            <button className=\"btn btn-info\" onClick={e => this.formAddBook(e)}> \r\n                                            <i className=\"fa fa-save\"></i> Guardar</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    \"\"}\r\n                               <br />\r\n                                <div className=\"row\">\r\n                                    <div className={this.state.showing? \"col-6\" : \"col-12\"}>\r\n                                        <ul className=\"list-group\">                          \r\n                                            {\r\n                                                this.state.loading \r\n                                                ?\r\n                                                <div className=\"fa-3x\">\r\n                                                    Cargando...\r\n                                                </div>\r\n                                                :\r\n                                                books.length\r\n                                                ?\r\n                                                    books.map(book => {\r\n                                                        return  <li key={book._id} className=\"list-group-item text-white\">\r\n                                                                    {book.title}\r\n                                                                    <p>\r\n                                                                        <button className=\"btn btn-info\" onClick={() => this.checkBook(book)}> \r\n                                                                        <i className=\"fa fa-eye\"></i>\r\n                                                                        {this.state.showing && book._id === this.state.book._id? \"Cerrar\" : \"Ver\"}\r\n                                                                        </button>\r\n                                                                        <button className=\"btn btn-danger\" onClick={() => this.deleteBook(book)}>\r\n                                                                        <i className=\"fa fa-trash\"></i> Eliminar</button>\r\n                                                                    </p>\r\n                                                                </li>\r\n                                                    })\r\n                                                :\r\n                                                <div className = \"card-body bg-danger text-white\">\r\n                                                    Sin libros\r\n                                                </div>\r\n                                            }\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className={this.state.showing ? \"col-6\": \"\"}>\r\n                                        { this.state.showing? <Book data={this.state.book} /> : null }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","C:\\Users\\Usuario\\rokketfront\\src\\component\\Navbar.js",[],"C:\\Users\\Usuario\\rokketfront\\src\\component\\Book.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":37,"column":23,"nodeType":"38","messageId":"39","endLine":37,"endColumn":40},{"ruleId":"36","severity":1,"message":"40","line":58,"column":19,"nodeType":"38","messageId":"39","endLine":58,"endColumn":38},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'savedBookResponse' is assigned a value but never used.","Identifier","unusedVar","'deletedBookResponse' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]